plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id "com.github.node-gradle.node" version "4.0.0" // gradle에서 npm 사용
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
   implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
   implementation 'org.springframework.boot:spring-boot-starter-web'
// https://mvnrepository.com/artifact/io.awspring.cloud/spring-cloud-starter-aws
implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'

   compileOnly 'org.projectlombok:lombok'
   developmentOnly 'org.springframework.boot:spring-boot-devtools'
   runtimeOnly 'com.mysql:mysql-connector-j'
   annotationProcessor 'org.projectlombok:lombok'
   testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

def reactAppDir = "${projectDir}/src/main/webapp" // 설정할 필요 없이 자동 제공 
processResources {
	// 의존성 주입 
	// processResources task 실행되기 전에 copyReactFile task 먼저 실행
 	dependsOn "copyReactFile"
}
task copyReactFile(type: Copy){
	dependsOn "buildReact"
	from "$reactAppDir/build"
	into "$projectDir/src/main/resources/static/"
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$reactAppDir"
	// $reactAppDir 디렉토리의 변경 사항을 감지하고, 변경 사항이 있을 경우에만 task 실행
	inputs.dir "$reactAppDir"
	group = BasePlugin.BUILD_GROUP
	if(System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	}else{
		commandLine "npm", "run-script", "build"
	}
}

task installReact(type: Exec) {
	workingDir "$reactAppDir"
	inputs.dir "$reactAppDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')){
		commandLine "npm.cmd", "audit", "fix"
		commandLine "npm.cmd", "install"
	}else{
		commandLine "npm", "audit", "fix"
		commandLine "npm", "install"
	}
}
